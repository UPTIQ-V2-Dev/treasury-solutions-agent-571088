
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  isEmailVerified: 'isEmailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  type: 'type',
  expires: 'expires',
  blacklisted: 'blacklisted',
  createdAt: 'createdAt',
  userId: 'userId'
};

exports.Prisma.ClientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  accountIds: 'accountIds',
  relationshipManager: 'relationshipManager',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StatementFileScalarFieldEnum = {
  id: 'id',
  filename: 'filename',
  type: 'type',
  size: 'size',
  uploadedAt: 'uploadedAt',
  status: 'status',
  clientId: 'clientId'
};

exports.Prisma.ParseResultScalarFieldEnum = {
  id: 'id',
  statementFileId: 'statementFileId',
  totalTransactions: 'totalTransactions',
  dateRangeStart: 'dateRangeStart',
  dateRangeEnd: 'dateRangeEnd',
  accounts: 'accounts',
  status: 'status',
  errors: 'errors',
  createdAt: 'createdAt'
};

exports.Prisma.AnalysisScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  statementFileIds: 'statementFileIds',
  createdAt: 'createdAt',
  status: 'status',
  summary: 'summary',
  liquidityMetrics: 'liquidityMetrics',
  spendingBreakdown: 'spendingBreakdown',
  idleBalanceAnalysis: 'idleBalanceAnalysis'
};

exports.Prisma.TreasuryProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  description: 'description',
  features: 'features',
  eligibilityRules: 'eligibilityRules',
  benefits: 'benefits',
  pricing: 'pricing',
  isActive: 'isActive'
};

exports.Prisma.RecommendationScalarFieldEnum = {
  id: 'id',
  analysisId: 'analysisId',
  productId: 'productId',
  priority: 'priority',
  rationale: 'rationale',
  dataPoints: 'dataPoints',
  benefitProjection: 'benefitProjection',
  status: 'status',
  createdAt: 'createdAt',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  title: 'title',
  analysisId: 'analysisId',
  clientId: 'clientId',
  format: 'format',
  template: 'template',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  fileSize: 'fileSize',
  downloadCount: 'downloadCount',
  status: 'status',
  filePath: 'filePath'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  configKey: 'configKey',
  configValue: 'configValue',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.AuditEntryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  userName: 'userName',
  userEmail: 'userEmail',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  details: 'details',
  severity: 'severity',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.TokenType = exports.$Enums.TokenType = {
  ACCESS: 'ACCESS',
  REFRESH: 'REFRESH',
  RESET_PASSWORD: 'RESET_PASSWORD',
  VERIFY_EMAIL: 'VERIFY_EMAIL'
};

exports.Prisma.ModelName = {
  User: 'User',
  Token: 'Token',
  Client: 'Client',
  StatementFile: 'StatementFile',
  ParseResult: 'ParseResult',
  Analysis: 'Analysis',
  TreasuryProduct: 'TreasuryProduct',
  Recommendation: 'Recommendation',
  Report: 'Report',
  SystemConfig: 'SystemConfig',
  AuditEntry: 'AuditEntry'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/workspace/projects/3b13f12b-7920-4f23-b5c9-b2e889a16019/01cda2c1-044f-412b-9ff9-b07dd1d8c5f1/backend/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/workspace/projects/3b13f12b-7920-4f23-b5c9-b2e889a16019/01cda2c1-044f-412b-9ff9-b07dd1d8c5f1/backend/src/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id              Int          @id @default(autoincrement())\n  email           String       @unique\n  name            String?\n  password        String\n  role            Role         @default(USER)\n  isEmailVerified Boolean      @default(false)\n  createdAt       DateTime     @default(now())\n  updatedAt       DateTime     @updatedAt\n  Token           Token[]\n  AuditEntry      AuditEntry[]\n}\n\nmodel Token {\n  id          Int       @id @default(autoincrement())\n  token       String\n  type        TokenType\n  expires     DateTime\n  blacklisted Boolean\n  createdAt   DateTime  @default(now())\n  user        User      @relation(fields: [userId], references: [id])\n  userId      Int\n}\n\nmodel Client {\n  id                  String          @id @default(cuid())\n  name                String\n  accountIds          String[]\n  relationshipManager String\n  status              String          @default(\"active\")\n  createdAt           DateTime        @default(now())\n  updatedAt           DateTime        @updatedAt\n  StatementFile       StatementFile[]\n  Analysis            Analysis[]\n  Report              Report[]\n}\n\nmodel StatementFile {\n  id          String       @id @default(cuid())\n  filename    String\n  type        String\n  size        Int\n  uploadedAt  DateTime     @default(now())\n  status      String       @default(\"uploading\")\n  clientId    String\n  client      Client       @relation(fields: [clientId], references: [id])\n  ParseResult ParseResult?\n}\n\nmodel ParseResult {\n  id                String        @id @default(cuid())\n  statementFileId   String        @unique\n  statementFile     StatementFile @relation(fields: [statementFileId], references: [id])\n  totalTransactions Int\n  dateRangeStart    DateTime\n  dateRangeEnd      DateTime\n  accounts          Json\n  status            String\n  errors            Json?\n  createdAt         DateTime      @default(now())\n}\n\nmodel Analysis {\n  id                  String           @id @default(cuid())\n  clientId            String\n  client              Client           @relation(fields: [clientId], references: [id])\n  statementFileIds    String[]\n  createdAt           DateTime         @default(now())\n  status              String           @default(\"processing\")\n  summary             Json\n  liquidityMetrics    Json\n  spendingBreakdown   Json\n  idleBalanceAnalysis Json\n  Recommendation      Recommendation[]\n  Report              Report[]\n}\n\nmodel TreasuryProduct {\n  id               String           @id @default(cuid())\n  name             String           @unique\n  category         String\n  description      String\n  features         String[]\n  eligibilityRules Json\n  benefits         Json\n  pricing          Json\n  isActive         Boolean          @default(true)\n  Recommendation   Recommendation[]\n}\n\nmodel Recommendation {\n  id                String          @id @default(cuid())\n  analysisId        String\n  analysis          Analysis        @relation(fields: [analysisId], references: [id])\n  productId         String\n  product           TreasuryProduct @relation(fields: [productId], references: [id])\n  priority          String\n  rationale         String\n  dataPoints        String[]\n  benefitProjection Json\n  status            String          @default(\"pending\")\n  createdAt         DateTime        @default(now())\n  approvedBy        String?\n  approvedAt        DateTime?\n}\n\nmodel Report {\n  id            String   @id @default(cuid())\n  title         String\n  analysisId    String\n  analysis      Analysis @relation(fields: [analysisId], references: [id])\n  clientId      String\n  client        Client   @relation(fields: [clientId], references: [id])\n  format        String\n  template      String\n  createdAt     DateTime @default(now())\n  createdBy     String\n  fileSize      Int      @default(0)\n  downloadCount Int      @default(0)\n  status        String   @default(\"generating\")\n  filePath      String?\n}\n\nmodel SystemConfig {\n  id          String   @id @default(cuid())\n  configKey   String   @unique\n  configValue Json\n  updatedAt   DateTime @updatedAt\n  updatedBy   String\n}\n\nmodel AuditEntry {\n  id         String   @id @default(cuid())\n  userId     Int\n  user       User     @relation(fields: [userId], references: [id])\n  userName   String\n  userEmail  String\n  action     String\n  resource   String\n  resourceId String?\n  details    String\n  severity   String\n  ipAddress  String\n  userAgent  String?\n  timestamp  DateTime @default(now())\n}\n\nenum Role {\n  USER\n  ADMIN\n}\n\nenum TokenType {\n  ACCESS\n  REFRESH\n  RESET_PASSWORD\n  VERIFY_EMAIL\n}\n",
  "inlineSchemaHash": "c7146562750b2f670d815bff8d97dcc2efdf0102668195038ec7835ccc44eb56",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Token\",\"kind\":\"object\",\"type\":\"Token\",\"relationName\":\"TokenToUser\"},{\"name\":\"AuditEntry\",\"kind\":\"object\",\"type\":\"AuditEntry\",\"relationName\":\"AuditEntryToUser\"}],\"dbName\":null},\"Token\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"TokenType\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"blacklisted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TokenToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Client\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountIds\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationshipManager\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"StatementFile\",\"kind\":\"object\",\"type\":\"StatementFile\",\"relationName\":\"ClientToStatementFile\"},{\"name\":\"Analysis\",\"kind\":\"object\",\"type\":\"Analysis\",\"relationName\":\"AnalysisToClient\"},{\"name\":\"Report\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ClientToReport\"}],\"dbName\":null},\"StatementFile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToStatementFile\"},{\"name\":\"ParseResult\",\"kind\":\"object\",\"type\":\"ParseResult\",\"relationName\":\"ParseResultToStatementFile\"}],\"dbName\":null},\"ParseResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statementFileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statementFile\",\"kind\":\"object\",\"type\":\"StatementFile\",\"relationName\":\"ParseResultToStatementFile\"},{\"name\":\"totalTransactions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateRangeStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dateRangeEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errors\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Analysis\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"AnalysisToClient\"},{\"name\":\"statementFileIds\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"liquidityMetrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"spendingBreakdown\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"idleBalanceAnalysis\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"Recommendation\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"AnalysisToRecommendation\"},{\"name\":\"Report\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"AnalysisToReport\"}],\"dbName\":null},\"TreasuryProduct\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eligibilityRules\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"benefits\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"pricing\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"Recommendation\",\"kind\":\"object\",\"type\":\"Recommendation\",\"relationName\":\"RecommendationToTreasuryProduct\"}],\"dbName\":null},\"Recommendation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysisId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysis\",\"kind\":\"object\",\"type\":\"Analysis\",\"relationName\":\"AnalysisToRecommendation\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"TreasuryProduct\",\"relationName\":\"RecommendationToTreasuryProduct\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rationale\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataPoints\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefitProjection\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysisId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"analysis\",\"kind\":\"object\",\"type\":\"Analysis\",\"relationName\":\"AnalysisToReport\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"client\",\"kind\":\"object\",\"type\":\"Client\",\"relationName\":\"ClientToReport\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"template\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"downloadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"configKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"configValue\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AuditEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditEntryToUser\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

